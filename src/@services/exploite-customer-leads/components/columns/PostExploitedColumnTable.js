import {Badge} from 'reactstrap'
import {Link} from 'react-router-dom'
import {subStr} from 'utility/Utils'

// *** Table Intl Column
export const columns = [
  {
    name: 'ID',
    minWidth: '150px',
    cell: row => <p>{row.id}</p>,
  },
  {
    name: 'Tên bài viết',
    selector: 'post_name',
    minWidth: '400px',
    cell: row => (
      <div className="py-2">
        <p className="m-0 font-weight-bold">
          <span> Tên bài viết: </span>
          <Link
            className="text-hover-primary text-dark"
            to={`/admin/exploit-potential-customers/post/${row.id}`}
          >
            {row.post_name || row.post_link}
          </Link>
        </p>
        <p className="m-0">
          <span> URL: </span>
          <a
            href={row.post_link}
            target="_blank"
            className="text-muted text-hover-danger"
            rel="noreferrer"
          >
            {row.post_link && subStr(row.post_link, 100)}
          </a>
        </p>
      </div>
    ),
  },
  {
    name: 'Nội dung',
    selector: 'post_content',
    minWidth: '400px',
    cell: row => <div>{row.post_content && subStr(row.post_content, 100)}</div>,
  },
  {
    name: 'Nguồn khai thác',
    minWidth: '140px',
    cell: row => (
      <div>
        <Badge color={'light-danger'} pill>
          {row.group_id
            ? 'Nhóm'
            : row.fanpage_id
            ? 'Fanpage'
            : row.fb_user_id
            ? 'Trang cá nhân'
            : 'Khác'}
        </Badge>
      </div>
    ),
  },
  {
    name: 'Trạng thái',
    selector: 'status_info',
    minWidth: '140px',
    cell: row => {
      return (
        <Badge
          color={
            row.status === 0
              ? 'warning'
              : row.status === 2
              ? 'primary'
              : 'danger'
          }
          pill
        >
          {row.status_info && row.status_info.name}
        </Badge>
      )
    },
  },
  {name: 'Người thêm', selector: 'user_info', hidden: true},
  // {
  //   name: 'Ngày bắt đầu',
  //   selector: 'start_date',
  //   sortable: true,
  //   minWidth: '120px',
  //   cell: row => <span>{row.start_date && formatViDate(row.start_date)}</span>,
  // },
  // {
  //   name: 'Ngày kết thúc',
  //   selector: 'end_date',
  //   sortable: true,
  //   minWidth: '120px',
  //   cell: row => <span>{row.end_date && formatViDate(row.end_date)}</span>,
  // },
  {
    name: 'Tổng số uid',
    selector: 'c_uid',
    sortable: true,
    minWidth: '140px',
  },
  {
    name: 'Lượt thích',
    selector: 'c_like',
    sortable: true,
    minWidth: '140px',
  },
  {
    name: 'Lượt bình luận',
    selector: 'c_comment',
    sortable: true,
    minWidth: '140px',
  },
  {
    name: 'Lượt chia sẻ',
    selector: 'c_share',
    sortable: true,
    minWidth: '140px',
  },
  // {
  //   name: 'Ngày thêm link',
  //   selector: 'create_time',
  //   sortable: true,
  //   minWidth: '120px',
  //   cell: row => <span>{row.create_time}</span>,
  // },
  // {
  //   name: 'Ngày cập nhật link',
  //   selector: 'update_time',
  //   sortable: true,
  //   minWidth: '120px',
  //   cell: row => (
  //     <span>{row.update_time && formatViDate(row.update_time)}</span>
  //   ),
  // },
]
