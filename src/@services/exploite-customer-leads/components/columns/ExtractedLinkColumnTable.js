import {Badge} from 'reactstrap'
import {Link} from 'react-router-dom'
import {subStr, formatViDate} from 'utility/Utils'

let STATUS_COLOR = {
  PENDING: 'light-secondary',
  RUNNING: 'light-warning',
  COMPLETE: 'light-success',
  ERROR: 'light-danger',
  PAUSE: 'light-secondary',
  STOP: 'light-secondary',
  WARNING: 'light-warning',
  TIME_OUT_RUNNING: 'light-secondary',
  TIME_OUT_PENDING: 'light-secondary',
}

// *** Table Intl Column
export const columns = [
  // {
  //   name: 'ID',
  //   minWidth: '200px',
  //   cell: row => <p>{row.id}</p>,
  // },
  {
    name: 'Tên nhóm',
    selector: 'name',
    minWidth: '400px',
    cell: row => (
      <div className="py-2">
        <p className="m-0 font-weight-bold">
          <Link
            className="text-hover-primary text-dark"
            to={`/admin/exploit-potential-customers/${row.type}/${row.grp_id}`}
          >
            {row.grp_name ? row.grp_name : 'Không xác định'}
          </Link>
        </p>
        <p className="m-0">
          {row.grp_url ? (
            <a
              href={row.grp_url}
              target="_blank"
              className="text-muted text-hover-danger"
              rel="noreferrer"
            >
              {row.grp_url && subStr(row.grp_url, 40)}
            </a>
          ) : (
            'Không xác định'
          )}
        </p>
      </div>
    ),
  },
  // {name: 'Đường dẫn liên kết', selector: 'link', hidden: true},
  // {name: 'Người thêm', selector: 'user_info', hidden: true},
  {
    name: 'Trạng thái',
    selector: 'status_info',
    minWidth: '120px',
    cell: row => {
      return (
        <Badge color={STATUS_COLOR[row.crt_running_state] || 'primary'} pill>
          {row.crt_running_state && row.crt_running_state}
        </Badge>
      )
    },
  },
  // {
  //   name: 'Loại trang',
  //   selector: 'link_type',
  //   minWidth: '150px',
  //   cell: row => {
  //     return (
  //       <Badge
  //         className="text-white"
  //         color={
  //           row.link_type !== 'opponent' ? 'light-primary' : 'light-warning'
  //         }
  //         pill
  //       >
  //         {row.link_type !== 'opponent' ? 'Tương tác' : 'Đối thủ'}
  //       </Badge>
  //     )
  //   },
  // },
  {
    name: 'Ngày bắt đầu',
    selector: 'crt_start_date',
    sortable: true,
    minWidth: '120px',
    cell: row => (
      <span>
        {row.crt_start_date === 'Đang thực hiện'
          ? 'Đang thực hiện'
          : row.crt_start_date && formatViDate(row.crt_start_date)}
      </span>
    ),
  },
  {
    name: 'Ngày kết thúc',
    selector: 'crt_finish_date',
    sortable: true,
    minWidth: '120px',
    cell: row => (
      <span>
        {row.crt_finish_date === 'Đang thực hiện'
          ? 'Đang thực hiện'
          : row.crt_finish_date && formatViDate(row.crt_finish_date)}
      </span>
    ),
  },

  {
    name: 'Ngày thêm link',
    selector: 'crt_created_date',
    sortable: true,
    minWidth: '120px',
    cell: row => (
      <span>
        {row.crt_finish_date === 'Đang thực hiện'
          ? 'Đang thực hiện'
          : row.crt_finish_date && formatViDate(row.crt_finish_date)}
      </span>
    ),
  },
  {
    name: 'Ngày cập nhật',
    selector: 'crt_update_date',
    sortable: true,
    minWidth: '120px',
    cell: row => (
      <span>
        {row.crt_finish_date === 'Đang thực hiện'
          ? 'Đang thực hiện'
          : row.crt_finish_date && formatViDate(row.crt_finish_date)}
      </span>
    ),
  },
]
