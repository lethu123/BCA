import DataTableComponent from 'components/data-table/DataTableComponent'

import {Form, Formik} from 'formik'
import {useCallback, useState} from 'react'
import {
  Button,
  Card,
  CardBody,
  Modal,
  ModalBody,
  ModalFooter,
  ModalHeader,
  Row,
  Table,
} from 'reactstrap'
import {keywordsColumn} from '../../columns/ExploitedKeyWords'

import * as Yup from 'yup'
import {Edit3, PlusCircle, Settings, Trash2} from 'react-feather'
import FormExtractionDataFB from '../../form/FormExtractionDataFB'
// import RecentlyExtractedLinkPage from '../../data-table/RecentlyExtractedLinkPage'

const validationSchema = Yup.object().shape({
  keyword: Yup.string().required('Bạn phải nhập từ khóa'),
})

const INITIALDATA = {keyword: ''}

const ExpandData = exspanDataKey => (
  <Table>
    <thead>
      <tr>
        <th>Thuộc tính</th>
        <th>Nội dung</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>#ID kết quả tìm kiếm </td>
        <td>{exspanDataKey?.srs_id || 'Chưa cập nhật'} </td>
      </tr>
      <tr>
        <td>URL tìm được </td>
        <td>{exspanDataKey?.srs_url || 'Chưa cập nhật'} </td>
      </tr>
      <tr>
        <td>Tiêu đề tìm được </td>
        <td>{exspanDataKey?.srs_title || 'Chưa cập nhật'} </td>
      </tr>
      <tr>
        <td>Ngày tìm kiếm</td>
        <td>{exspanDataKey?.srs_found_date || 'Chưa cập nhật'} </td>
      </tr>
      <tr>
        <td>loại</td>
        <td>{exspanDataKey?.srs_type || 'Chưa cập nhật'} </td>
      </tr>
      {/* <tr>
        <td>#ID Từ khóa tìm kiếm</td>
        <td>{exspanData?.srs_search_keyword_id || 'Chưa cập nhật'} </td>
      </tr> */}
    </tbody>
  </Table>
)

const data = [
  {
    swk_id: 1,
    skw_text: 'facebook',
    skw_input_date: new Date(),
    skw_total_found: '1000',
  },
]

const ExploidtedKeyWords = () => {
  const renderColumn = useCallback(
    () => [
      ...keywordsColumn,
      {
        name: 'action',
        center: true,
        cell: row => (
          <div>
            <Button.Ripple
              className="px-2 mr-2"
              size="sm"
              color="warning"
              onClick={() => {}}
            >
              <Edit3 size="18" />
            </Button.Ripple>
            <Button.Ripple
              className="px-2"
              size="sm"
              color="danger"
              onClick={() => {}}
            >
              <Trash2 size="18" />
            </Button.Ripple>
          </div>
        ),
      },
    ],
    [],
  )

  const [openModal, setOpenModal] = useState(false)
  return (
    <div className="content-body">
      <Formik initialValues={INITIALDATA} validationSchema={validationSchema}>
        {() => (
          <Form>
            <Row className="my-1 d-flex justify-content-end">
              {/* <Col lg={8}>
                <RecentlyExtractedLinkPage type="keyword" />
              </Col>
              <Col lg={4}>
                <FormExtractionDataFB type="keyword" />
              </Col> */}
              <Button.Ripple
                className="mr-3"
                color="primary"
                onClick={() => setOpenModal(!openModal)}
              >
                <PlusCircle size={14} className="mr-1" />
                <span className="align-middle ms-25">
                  Thêm từ khóa trích xuất
                </span>
              </Button.Ripple>
            </Row>

            <div className="content-body">
              <Card>
                <CardBody>
                  <DataTableComponent
                    columns={renderColumn()}
                    query={{
                      key: [],
                      params: '',
                      uid: '',
                      url: '',
                      headers: '',
                    }}
                    defaultData={data}
                    ExpandableComponent={<ExpandData />}
                    searchPlaceholder="Tìm kiếm"
                  />
                </CardBody>
              </Card>
            </div>
          </Form>
        )}
      </Formik>

      <Modal isOpen={openModal} className={'modal-dialog-centered modal-xl'}>
        <ModalHeader>
          <Settings size={14} className="mr-1" />
          <span className="align-middle ms-25">Cài đặt từ khóa</span>
        </ModalHeader>
        <ModalBody>
          <FormExtractionDataFB type="keyword" />
        </ModalBody>
        <ModalFooter>
          <Button.Ripple
            className="mr-3"
            onClick={() => setOpenModal(!openModal)}
          >
            <span className="align-middle ms-25">Đóng</span>
          </Button.Ripple>
        </ModalFooter>
      </Modal>
    </div>
  )
}
export default ExploidtedKeyWords
