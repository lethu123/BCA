import {Alert, Button, Card, CardBody, Spinner} from 'reactstrap'
import {useHistory, useParams} from 'react-router-dom'
import {
  Facebook,
  MessageSquare,
  ThumbsUp,
  Users,
  ChevronLeft,
} from 'react-feather'
import Avatar from '@core/components/avatar'
import moment from 'moment'

// ** compponent
import {
  ListUidDataTable,
  StatisticExploitedPostDetail,
  ExploiteCustomerLeadsQuery,
} from '@services/exploite-customer-leads'

const dataSocial = [
  {
    key: 'c_like',
    subtitle: 'Reactions',
    color: 'light-primary',
    icon: <ThumbsUp size={13} />,
  },
  {
    key: 'c_comment',
    subtitle: 'Comments',
    color: 'light-info',
    icon: <MessageSquare size={13} />,
  },
  {
    key: 'c_uid',
    subtitle: 'UIDs',
    color: 'light-danger',
    icon: <Users size={13} />,
  },
  {
    key: 'c_share',
    subtitle: 'Shares',
    color: 'light-success',
    icon: <Facebook size={13} />,
  },
]

const PostExploitedDetailPage = () => {
  // ** query
  const {usePostExploitedInfo} = ExploiteCustomerLeadsQuery

  const {postId} = useParams()
  const history = useHistory()

  const {data: postInfo, isLoading, isError} = usePostExploitedInfo(postId)

  if (isLoading) {
    return (
      <div className="w-100 text-center">
        <Button color="flat-primary">
          <Spinner color="primary" size="sm" type="grow" />
          <span className="ml-5 text-primary">Loading...</span>
        </Button>
      </div>
    )
  }

  if (isError) {
    return (
      <div className="w-50">
        <Alert color="warning tex-center">
          <span className="alert-heading ">
            Hiện tại không tìm thấy dữ liệu
          </span>
        </Alert>
        <Button.Ripple
          color="warning"
          outline
          className=" mt-2"
          onClick={() => history.goBack()}
        >
          Quay trở lại
        </Button.Ripple>
      </div>
    )
  }
  const data = postInfo.data || {}

  return (
    <div className="customer-page " style={{backgroundColor: '#fff'}}>
      {/* <Breadcrumb className="py-3 mb-0 Breadcrumb">
        <BreadcrumbItem>
          <span className="svg-icon svg-icon-info svg-icon-2x mr-2">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
              width="24px"
              height="24px"
              viewBox="0 0 24 24"
              version="1.1"
            >
              <g stroke="none" strokeWidth={1} fill="none" fillRule="evenodd">
                <polygon points="0 0 24 0 24 24 0 24" />
                <path
                  d="M18,14 C16.3431458,14 15,12.6568542 15,11 C15,9.34314575 16.3431458,8 18,8 C19.6568542,8 21,9.34314575 21,11 C21,12.6568542 19.6568542,14 18,14 Z M9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 Z"
                  fill="#000000"
                  fillRule="nonzero"
                  opacity="0.3"
                />
                <path
                  d="M17.6011961,15.0006174 C21.0077043,15.0378534 23.7891749,16.7601418 23.9984937,20.4 C24.0069246,20.5466056 23.9984937,21 23.4559499,21 L19.6,21 C19.6,18.7490654 18.8562935,16.6718327 17.6011961,15.0006174 Z M0.00065168429,20.1992055 C0.388258525,15.4265159 4.26191235,13 8.98334134,13 C13.7712164,13 17.7048837,15.2931929 17.9979143,20.2 C18.0095879,20.3954741 17.9979143,21 17.2466999,21 C13.541124,21 8.03472472,21 0.727502227,21 C0.476712155,21 -0.0204617505,20.45918 0.00065168429,20.1992055 Z"
                  fill="#000000"
                  fillRule="nonzero"
                />
              </g>
            </svg>
          </span>
          <Link to="/admin/exploit-potential-customers/exploit-post">
            Khách hàng tiềm năng
          </Link>
        </BreadcrumbItem>
        <BreadcrumbItem>
          <Link to="/admin/exploit-potential-customers/exploit-post">
            Khai thác Post
          </Link>
        </BreadcrumbItem>
        <BreadcrumbItem active style={{cursor: 'context-menu'}}>
          <span> {data.name || 'Chi tiết bài viết'}</span>
        </BreadcrumbItem>
      </Breadcrumb> */}

      <div
        className="p-5 cursor-pointer d-inline-block text-hover-primary"
        onClick={() => history.goBack()}
      >
        <ChevronLeft size={30} className=" text-primary mr-2" />
        Quay lại
      </div>

      <div className="p-3">
        <div>
          <div className="d-flex">
            <span className="svg-icon svg-icon-primary svg-icon-2x mr-4">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                xmlnsXlink="http://www.w3.org/1999/xlink"
                width="26px"
                height="26px"
                viewBox="0 0 26 26"
                version="1.1"
              >
                <g stroke="none" strokeWidth={1} fill="none" fillRule="evenodd">
                  <rect x={0} y={0} width={26} height={26} />
                  <path
                    d="M16.3740377,19.9389434 L22.2226499,11.1660251 C22.4524142,10.8213786 22.3592838,10.3557266 22.0146373,10.1259623 C21.8914367,10.0438285 21.7466809,10 21.5986122,10 L17,10 L17,4.47708173 C17,4.06286817 16.6642136,3.72708173 16.25,3.72708173 C15.9992351,3.72708173 15.7650616,3.85240758 15.6259623,4.06105658 L9.7773501,12.8339749 C9.54758575,13.1786214 9.64071616,13.6442734 9.98536267,13.8740377 C10.1085633,13.9561715 10.2533191,14 10.4013878,14 L15,14 L15,19.5229183 C15,19.9371318 15.3357864,20.2729183 15.75,20.2729183 C16.0007649,20.2729183 16.2349384,20.1475924 16.3740377,19.9389434 Z"
                    fill="#000000"
                  />
                  <path
                    d="M4.5,5 L9.5,5 C10.3284271,5 11,5.67157288 11,6.5 C11,7.32842712 10.3284271,8 9.5,8 L4.5,8 C3.67157288,8 3,7.32842712 3,6.5 C3,5.67157288 3.67157288,5 4.5,5 Z M4.5,17 L9.5,17 C10.3284271,17 11,17.6715729 11,18.5 C11,19.3284271 10.3284271,20 9.5,20 L4.5,20 C3.67157288,20 3,19.3284271 3,18.5 C3,17.6715729 3.67157288,17 4.5,17 Z M2.5,11 L6.5,11 C7.32842712,11 8,11.6715729 8,12.5 C8,13.3284271 7.32842712,14 6.5,14 L2.5,14 C1.67157288,14 1,13.3284271 1,12.5 C1,11.6715729 1.67157288,11 2.5,11 Z"
                    fill="#000000"
                    opacity="0.3"
                  />
                </g>
              </svg>
            </span>
            <h4 className="text-primary ml-2">Nội dung:</h4>
          </div>
          <div style={{fontSize: '14px'}} className="mx-0 mx-md-5">
            {data.post_content}
          </div>
        </div>
        {/* <p className="mt-3 mb-0"> </p> */}
        <p className="my-3 mx-0 mx-md-5">
          URL:
          <a
            href={data.post_link}
            className="text-muted text-hover-danger text-truncate"
            target="_blank"
            rel="noreferrer"
          >
            {/* {data.post_link && subStr(data.post_link, 200)} */}
            {data.post_link && data.post_link.slice(0, 43) + '...'}
          </a>
        </p>
        <p className="my-4 mx-0 mx-md-5">
          Ngày đăng:{' '}
          <span className="text-muted">
            {moment(data.post_datetime).format('DD/MM/YYYY')}
          </span>
        </p>
        <div className="my-4 mx-0 mx-md-5">
          <span className="text-gray-800"> Từ khóa nổi bật:</span>
          {Array.isArray(data.hot_key) ? (
            data.hot_key?.length > 0 &&
            data.hot_key.map((ele, idx) => (
              <span
                key={idx}
                className="btn btn-sm btn-light-success fw-bolder ms-2 fs-8 py-1 px-3"
              >
                {ele}
              </span>
            ))
          ) : (
            <span className="btn btn-sm btn-light-success fw-bolder ms-2 fs-8 py-1 px-3">
              {data.hot_key}
            </span>
          )}
        </div>
      </div>
      <div className="row justify-content-center mx-0">
        {dataSocial.map((ele, idx) => (
          <div className="col-sm-6  col-md-6 col-lg-3 " key={idx}>
            <Card className="mx-4  p-0">
              <CardBody>
                <div className="d-flex justify-content-center">
                  <Avatar
                    color={ele.color}
                    icon={ele.icon}
                    className="mr-5"
                    style={{width: 32, height: 32, borderRadius: '50%'}}
                  />
                  <div>
                    <p className="mb-0">{data[ele.key] || 0}</p>
                    <p className="mb-0">{ele.subtitle}</p>
                  </div>
                </div>
              </CardBody>
            </Card>
          </div>
        ))}
      </div>

      <div style={{width: '95%', margin: '0px auto'}} className="pb-7">
        <StatisticExploitedPostDetail
          statistic={data.statistic || {}}
          update={data.update_time}
        />
        <h4 className="text-info my-5">Danh sách các uid từ bài viết</h4>
        <ListUidDataTable type="post" id={postId} />
      </div>
    </div>
  )
}

export default PostExploitedDetailPage
