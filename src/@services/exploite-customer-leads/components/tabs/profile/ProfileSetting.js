import React, {useCallback} from 'react'
import {
  Card,
  CardBody,
  Collapse,
  CustomInput,
  Input,
  ListGroup,
  ListGroupItem,
  Row,
} from 'reactstrap'
import {useState} from 'react'
import {ChevronDown, ChevronRight} from 'react-feather'

const LIST_modal_profile_EXPLOITEDS = [
  {
    value: 'modal_profile_name_url',
    label: 'Name and URL only',
    childrens: [],
  },
  {
    value: 'modal_profile_detail_profile',
    label: 'Chi tiết profile',
    is_show_parent: true,
    childrens: [
      {
        value: 'modal_profile_modal_profile_info',
        label: 'Profile info',
        childs: [],
      },
      {
        value: 'modal_profile_list_friends',
        label: 'Danh sách bạn bè',
        childs: [],
      },
      {
        value: 'modal_profile_list_modal_profile_posts',
        label: 'Danh sách profile post',
        childs: [
          {
            value: 'modal_profile_limit_time',
            label: 'Giới hạn thời gian',
            type: 'radio',
            child: [
              {
                value: 'modal_profile_1_month',
                label: '1 tháng',
              },
              {
                value: 'modal_profile_3_month',
                label: '3 tháng',
              },
              {
                value: 'modal_profile_6_month',
                label: '6 tháng',
              },
            ],
          },
          {
            value: 'modal_profile_limit_count',
            label: 'Giới hạn số lượng',
            type: 'radio',
            child: [
              {
                value: 'modal_profile_10',
                label: '10',
              },
              {
                value: 'modal_profile_30',
                label: '30',
              },
              {
                value: 'modal_profile_50',
                label: '50',
              },
              {
                value: 'modal_profile_100',
                label: '100',
              },
            ],
          },
          {
            value: 'modal_profile_post_detail',
            label: 'Chi tiết Post',
            child: [
              {
                value: 'modal_profile_post_user',
                label: 'Người đăng',
                sons: [],
              },
              {
                value: 'modal_profile_post_content',
                label: 'Nội dung',
                sons: [],
              },
              {
                value: 'modal_profile_post_statistic',
                label: 'Thống kê tương tác',
                sons: [],
              },
              {
                value: 'modal_profile_post_reactors',
                label: 'Reactors',
                sons: [
                  {
                    value: 'modal_profile_post_reactors_name_url',
                    label: 'Name and URL only',
                    son: [],
                  },
                  {
                    value: 'modal_profile_post_reactors_detail_profile',
                    label: 'Chi tiết profile',
                    son: [
                      {
                        value: 'modal_profile_post_reactors_modal_profile_info',
                        label: 'Profile info',
                      },
                      {
                        value: 'modal_profile_post_reactors_list_friends',
                        label: 'Danh sách bạn bè',
                      },
                      {
                        value:
                          'modal_profile_post_reactors_list_modal_profile_posts',
                        label: 'Danh sách profile post',
                      },
                    ],
                  },
                ],
              },
              {
                value: 'modal_profile_post_commentors',
                label: 'Commentors',
                sons: [
                  {
                    value: 'modal_profile_post_commentors_name_url',
                    label: 'Name and URL only',
                    son: [],
                  },
                  {
                    value: 'modal_profile_post_commentors_detail_profile',
                    label: 'Chi tiết profile',
                    son: [
                      {
                        value:
                          'modal_profile_post_commentors_modal_profile_info',
                        label: 'Profile info',
                      },
                      {
                        value: 'modal_profile_post_commentors_list_friends',
                        label: 'Danh sách bạn bè',
                      },
                      {
                        value:
                          'modal_profile_post_commentors_list_modal_profile_posts',
                        label: 'Danh sách profile post',
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
    ],
  },
]

const ProfileSetting = ({changeTab, modal, type}) => {
  const [datas, setDatas] = useState(LIST_modal_profile_EXPLOITEDS)
  const [collapseChilds, setCollapseChilds] = useState([])
  const [showRadio, setShowRadio] = useState({
    modal_profile_limit_time: 'modal_profile_1_month',
    modal_profile_limit_count: 'modal_profile_10',
  })

  const handleShowMoreParent = useCallback(value => {
    setDatas(datas =>
      datas.map(data =>
        data.value === value
          ? {...data, is_show_parent: !data.is_show_parent}
          : data,
      ),
    )
  }, [])

  const handleShowMoreChilds = useCallback(value => {
    setCollapseChilds(collapses =>
      collapses.includes(value)
        ? collapses.filter(cl => cl !== value)
        : [...collapses, value],
    )
  }, [])

  const handleShowRadio = useCallback((parentValue, childValue) => {
    setShowRadio(radio => ({...radio, [parentValue]: childValue}))
  }, [])
  return (
    <>
      <Row>
        {datas.map(profile => (
          <Card className="ml-3 mt-2 bg-transparent border-primary shadow-none">
            <CardBody>
              <div className="ml-2" key={profile.value}>
                <div className="d-flex">
                  <CustomInput
                    type="checkbox"
                    className="custom-control-success mb-2"
                    id={profile.value}
                    defaultChecked
                    inline
                  />
                  <div>
                    {profile.childrens.length > 0 ? (
                      <div
                        type="button"
                        className="mb-2"
                        onClick={() => handleShowMoreParent(profile.value)}
                      >
                        {profile.label}
                        {profile.is_show_parent ? (
                          <ChevronDown size={14} className="ml-2" />
                        ) : (
                          <ChevronRight size={14} className="ml-2" />
                        )}
                      </div>
                    ) : (
                      <div type="button" className="mb-2">
                        {profile.label}
                      </div>
                    )}
                    {profile.childrens.length > 0 && (
                      <Collapse
                        isOpen={!collapseChilds.includes(profile.value)}
                      >
                        {profile.childrens.map(children => (
                          <div className="d-flex" key={children.value}>
                            <CustomInput
                              type="checkbox"
                              className="custom-control-success mb-2"
                              id={children.value}
                              defaultChecked
                              inline
                            />
                            <div>
                              {children.childs.length > 0 ? (
                                <div
                                  type="button"
                                  className="mb-2"
                                  onClick={() =>
                                    handleShowMoreChilds(children.value)
                                  }
                                >
                                  {children.label}
                                  {!collapseChilds.includes(children.value) ? (
                                    <ChevronDown size={14} className="ml-3" />
                                  ) : (
                                    <ChevronRight size={14} className="ml-3" />
                                  )}
                                </div>
                              ) : (
                                <div type="button" className="mb-2">
                                  {children.label}
                                </div>
                              )}
                              {children.childs.length > 0 && (
                                <Collapse
                                  isOpen={
                                    !collapseChilds.includes(children.value)
                                  }
                                >
                                  {children.childs.map(childs => (
                                    <div className="d-flex" key={childs.value}>
                                      <CustomInput
                                        type="checkbox"
                                        className="custom-control-success mb-2"
                                        id={childs.value}
                                        defaultChecked
                                        inline
                                      />
                                      <div>
                                        {childs.child.length > 0 ? (
                                          <div
                                            type="button"
                                            className="mb-2"
                                            onClick={() =>
                                              handleShowMoreChilds(childs.value)
                                            }
                                          >
                                            {childs.label}
                                            {!collapseChilds.includes(
                                              childs.value,
                                            ) ? (
                                              <ChevronDown
                                                size={14}
                                                className="ml-3"
                                              />
                                            ) : (
                                              <ChevronRight
                                                size={14}
                                                className="ml-3"
                                              />
                                            )}
                                          </div>
                                        ) : (
                                          <div type="button" className="mb-2">
                                            {childs.label}
                                          </div>
                                        )}
                                        {childs.type === 'radio' ? (
                                          <>
                                            {childs.child.length > 0 && (
                                              <Collapse
                                                isOpen={
                                                  !collapseChilds.includes(
                                                    childs.value,
                                                  )
                                                }
                                              >
                                                <ListGroup
                                                  style={{maxWidth: '20vw'}}
                                                  className="ml-1 mb-2"
                                                >
                                                  {childs.child.map(son => (
                                                    <ListGroupItem
                                                      key={son.value}
                                                      className="d-flex cursor-pointer"
                                                      onClick={() =>
                                                        handleShowRadio(
                                                          childs.value,
                                                          son.value,
                                                        )
                                                      }
                                                    >
                                                      <div
                                                        className="px-3 py-1"
                                                        size={15}
                                                      >
                                                        <Input
                                                          type="radio"
                                                          name={son.value}
                                                          checked={
                                                            showRadio[
                                                              childs.value
                                                            ] === son.value
                                                          }
                                                        />
                                                        <span className="ml-5">
                                                          {son.label}
                                                        </span>
                                                      </div>
                                                    </ListGroupItem>
                                                  ))}
                                                </ListGroup>
                                              </Collapse>
                                            )}
                                          </>
                                        ) : (
                                          <>
                                            {childs.child.length > 0 && (
                                              <Collapse
                                                isOpen={
                                                  !collapseChilds.includes(
                                                    childs.value,
                                                  )
                                                }
                                              >
                                                {childs.child.map(son => (
                                                  <div
                                                    className="d-flex"
                                                    key={son.value}
                                                  >
                                                    <CustomInput
                                                      type="checkbox"
                                                      className="custom-control-success mb-2"
                                                      id={son.value}
                                                      defaultChecked
                                                      inline
                                                    />
                                                    <div className="mb-2">
                                                      {son.sons.length > 0 ? (
                                                        <div
                                                          type="button"
                                                          onClick={() =>
                                                            handleShowMoreChilds(
                                                              son.value,
                                                            )
                                                          }
                                                        >
                                                          {son.label}
                                                          <ChevronDown
                                                            size={14}
                                                            className="ml-3"
                                                          />
                                                        </div>
                                                      ) : (
                                                        <div>{son.label}</div>
                                                      )}
                                                      {son.sons.length > 0 && (
                                                        <Collapse
                                                          isOpen={
                                                            !collapseChilds.includes(
                                                              son.value,
                                                            )
                                                          }
                                                        >
                                                          {son.sons.map(
                                                            item => (
                                                              <div
                                                                className="d-flex"
                                                                key={item.value}
                                                              >
                                                                <CustomInput
                                                                  type="checkbox"
                                                                  className="custom-control-success mb-2"
                                                                  id={
                                                                    item.value
                                                                  }
                                                                  defaultChecked
                                                                  inline
                                                                />
                                                                <div className="mb-2">
                                                                  {item.son
                                                                    .length >
                                                                  0 ? (
                                                                    <div
                                                                      type="button"
                                                                      onClick={() =>
                                                                        handleShowMoreChilds(
                                                                          item.value,
                                                                        )
                                                                      }
                                                                    >
                                                                      {
                                                                        item.label
                                                                      }
                                                                      <ChevronDown
                                                                        size={
                                                                          14
                                                                        }
                                                                        className="ml-3"
                                                                      />
                                                                    </div>
                                                                  ) : (
                                                                    <div>
                                                                      {
                                                                        item.label
                                                                      }
                                                                    </div>
                                                                  )}
                                                                  {item.son
                                                                    .length >
                                                                    0 && (
                                                                    <Collapse
                                                                      isOpen={
                                                                        !collapseChilds.includes(
                                                                          item.value,
                                                                        )
                                                                      }
                                                                    >
                                                                      {item.son.map(
                                                                        itemchild => (
                                                                          <div
                                                                            className="d-flex"
                                                                            key={
                                                                              itemchild.value
                                                                            }
                                                                          >
                                                                            <CustomInput
                                                                              type="checkbox"
                                                                              className="custom-control-success mb-2"
                                                                              id={
                                                                                itemchild.value
                                                                              }
                                                                              defaultChecked
                                                                              inline
                                                                            />
                                                                            <div className="mb-2">
                                                                              {
                                                                                itemchild.label
                                                                              }
                                                                            </div>
                                                                          </div>
                                                                        ),
                                                                      )}
                                                                    </Collapse>
                                                                  )}
                                                                </div>
                                                              </div>
                                                            ),
                                                          )}
                                                        </Collapse>
                                                      )}
                                                    </div>
                                                  </div>
                                                ))}
                                              </Collapse>
                                            )}
                                          </>
                                        )}
                                      </div>
                                    </div>
                                  ))}
                                </Collapse>
                              )}
                            </div>
                          </div>
                        ))}
                      </Collapse>
                    )}
                  </div>
                </div>
              </div>
            </CardBody>
          </Card>
        ))}
      </Row>
    </>
  )
}
export default ProfileSetting
