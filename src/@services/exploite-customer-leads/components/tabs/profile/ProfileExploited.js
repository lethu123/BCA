import React, {useCallback} from 'react'
import {
  Card,
  CardBody,
  Col,
  Collapse,
  CustomInput,
  Input,
  ListGroup,
  ListGroupItem,
  Row,
} from 'reactstrap'
import {useState} from 'react'
import {ChevronDown, ChevronRight} from 'react-feather'

const LIST_PROFILE_EXPLOITEDS = [
  {
    value: 'profile_name_url',
    label: 'Name and URL only',
    type: 'radio',
    childrens: [],
  },
  {
    value: 'profile_detail_profile',
    label: 'Chi tiết profile',
    type: 'radio',
    is_show_parent: true,
    childrens: [
      {
        value: 'profile_profile_info',
        label: 'Profile info',
        childs: [],
      },
      {
        value: 'profile_list_friends',
        label: 'Danh sách bạn bè',
        childs: [],
      },
      {
        value: 'profile_list_profile_posts',
        label: 'Danh sách profile post',
        childs: [
          {
            value: 'profile_limit_time',
            label: 'Giới hạn thời gian',
            type: 'radio',
            child: [
              {
                value: 'profile_1_month',
                label: '1 tháng',
              },
              {
                value: 'profile_3_month',
                label: '3 tháng',
              },
              {
                value: 'profile_6_month',
                label: '6 tháng',
              },
            ],
          },
          {
            value: 'profile_limit_count',
            label: 'Giới hạn số lượng',
            type: 'radio',
            child: [
              {
                value: 'profile_10',
                label: '10',
              },
              {
                value: 'profile_30',
                label: '30',
              },
              {
                value: 'profile_50',
                label: '50',
              },
              {
                value: 'profile_100',
                label: '100',
              },
            ],
          },
          {
            value: 'profile_post_detail',
            label: 'Chi tiết bài viết của cá nhân',
            child: [
              {
                value: 'profile_post_user',
                label: 'Người đăng',
                sons: [],
              },
              {
                value: 'profile_post_content',
                label: 'Nội dung',
                sons: [],
              },
              {
                value: 'profile_post_statistic',
                label: 'Thống kê tương tác',
                sons: [],
              },
              {
                value: 'profile_post_reactors',
                label: 'Reactors',
                sons: [
                  {
                    value: 'profile_post_reactors_name_url',
                    label: 'Name and URL only',
                    son: [],
                  },
                  {
                    value: 'profile_post_reactors_detail_profile',
                    label: 'Chi tiết profile',
                    son: [
                      {
                        value: 'profile_post_reactors_profile_info',
                        label: 'Profile info',
                      },
                      {
                        value: 'profile_post_reactors_list_friends',
                        label: 'Danh sách bạn bè',
                      },
                      {
                        value: 'profile_post_reactors_list_profile_posts',
                        label: 'Danh sách profile post',
                      },
                    ],
                  },
                ],
              },
              {
                value: 'profile_post_commentors',
                label: 'Commentors',
                sons: [
                  {
                    value: 'profile_post_commentors_name_url',
                    label: 'Name and URL only',
                    son: [],
                  },
                  {
                    value: 'profile_post_commentors_detail_profile',
                    label: 'Chi tiết profile',
                    son: [
                      {
                        value: 'profile_post_commentors_profile_info',
                        label: 'Profile info',
                      },
                      {
                        value: 'profile_post_commentors_list_friends',
                        label: 'Danh sách bạn bè',
                      },
                      {
                        value: 'profile_post_commentors_list_profile_posts',
                        label: 'Danh sách profile post',
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
    ],
  },
]

const ProfileExploited = ({changeTab, modal, type}) => {
  const [datas, setDatas] = useState(LIST_PROFILE_EXPLOITEDS)
  const [collapseChilds, setCollapseChilds] = useState([])
  const [showRadio, setShowRadio] = useState({
    profile_limit_time: 'profile_1_month',
    profile_limit_count: 'profile_10',
  })

  const handleShowMoreParent = useCallback(value => {
    setDatas(datas =>
      datas.map(data =>
        data.value === value
          ? {...data, is_show_parent: !data.is_show_parent}
          : data,
      ),
    )
  }, [])

  const handleShowMoreChilds = useCallback(value => {
    setCollapseChilds(collapses =>
      collapses.includes(value)
        ? collapses.filter(cl => cl !== value)
        : [...collapses, value],
    )
  }, [])

  const handleShowRadio = useCallback((parentValue, childValue) => {
    setShowRadio(radio => ({...radio, [parentValue]: childValue}))
  }, [])
  return (
    <>
      <Row>
        {datas.map(profile => (
          <Col key={profile.value} md={12}>
            <Card>
              <CardBody>
                <div className="ml-5">
                  <div className="d-flex">
                    <CustomInput
                      type="checkbox"
                      className="custom-control-success mt-2"
                      id={profile.value}
                      defaultChecked
                      inline
                    />
                    <div>
                      {profile.childrens.length > 0 ? (
                        <div
                          type="button"
                          className="mt-2"
                          onClick={() => handleShowMoreParent(profile.value)}
                        >
                          {profile.label}
                          {profile.is_show_parent ? (
                            <ChevronRight size={14} className="ml-3" />
                          ) : (
                            <ChevronDown size={14} className="ml-3" />
                          )}
                        </div>
                      ) : (
                        <div type="button" className="mt-2">
                          {profile.label}
                        </div>
                      )}
                      {profile.childrens.length > 0 && (
                        <Collapse isOpen={!profile.is_show_parent}>
                          {profile.childrens.map(children => (
                            <div className="d-flex" key={children.value}>
                              <CustomInput
                                type="checkbox"
                                className="custom-control-success mt-2"
                                id={children.value}
                                defaultChecked
                                inline
                              />
                              <div>
                                {children.childs.length > 0 ? (
                                  <div
                                    type="button"
                                    className="mt-2"
                                    onClick={() =>
                                      handleShowMoreChilds(children.value)
                                    }
                                  >
                                    {children.label}
                                    {!collapseChilds.includes(
                                      children.value,
                                    ) ? (
                                      <ChevronDown size={14} className="ml-3" />
                                    ) : (
                                      <ChevronRight
                                        size={14}
                                        className="ml-3"
                                      />
                                    )}
                                  </div>
                                ) : (
                                  <div type="button" className="mt-2">
                                    {children.label}
                                  </div>
                                )}
                                {children.childs.length > 0 && (
                                  <Collapse
                                    isOpen={
                                      !collapseChilds.includes(children.value)
                                    }
                                  >
                                    {children.childs.map(childs => (
                                      <div
                                        className="d-flex"
                                        key={childs.value}
                                      >
                                        <CustomInput
                                          type="checkbox"
                                          className="custom-control-success mt-2"
                                          id={childs.value}
                                          defaultChecked
                                          inline
                                        />
                                        <div>
                                          {childs.child.length > 0 ? (
                                            <div
                                              type="button"
                                              className="mt-2"
                                              onClick={() =>
                                                handleShowMoreChilds(
                                                  childs.value,
                                                )
                                              }
                                            >
                                              {childs.label}
                                              {!collapseChilds.includes(
                                                childs.value,
                                              ) ? (
                                                <ChevronDown
                                                  size={14}
                                                  className="ml-3"
                                                />
                                              ) : (
                                                <ChevronRight
                                                  size={14}
                                                  className="ml-3"
                                                />
                                              )}
                                            </div>
                                          ) : (
                                            <div type="button" className="mt-2">
                                              {childs.label}
                                            </div>
                                          )}
                                          {childs.type === 'radio' ? (
                                            <>
                                              {childs.child.length > 0 && (
                                                <Collapse
                                                  isOpen={
                                                    !collapseChilds.includes(
                                                      childs.value,
                                                    )
                                                  }
                                                >
                                                  <ListGroup
                                                    style={{maxWidth: '20vw'}}
                                                    className="ml-1 mt-3"
                                                  >
                                                    {childs.child.map(son => (
                                                      <ListGroupItem
                                                        key={son.value}
                                                        className="d-flex cursor-pointer"
                                                        onClick={() =>
                                                          handleShowRadio(
                                                            childs.value,
                                                            son.value,
                                                          )
                                                        }
                                                      >
                                                        <div
                                                          className="px-3 py-1"
                                                          size={15}
                                                        >
                                                          <Input
                                                            type="radio"
                                                            name={son.value}
                                                            checked={
                                                              showRadio[
                                                                childs.value
                                                              ] === son.value
                                                            }
                                                          />
                                                          <span className="ml-5">
                                                            {son.label}
                                                          </span>
                                                        </div>
                                                      </ListGroupItem>
                                                    ))}
                                                  </ListGroup>
                                                </Collapse>
                                              )}
                                            </>
                                          ) : (
                                            <>
                                              {childs.child.length > 0 && (
                                                <Collapse
                                                  isOpen={
                                                    !collapseChilds.includes(
                                                      childs.value,
                                                    )
                                                  }
                                                >
                                                  {childs.child.map(son => (
                                                    <div
                                                      className="d-flex"
                                                      key={son.value}
                                                    >
                                                      <CustomInput
                                                        type="checkbox"
                                                        className="custom-control-success mt-2"
                                                        id={son.value}
                                                        defaultChecked
                                                        inline
                                                      />
                                                      <div className="mt-2">
                                                        {son.sons.length > 0 ? (
                                                          <div
                                                            type="button"
                                                            onClick={() =>
                                                              handleShowMoreChilds(
                                                                son.value,
                                                              )
                                                            }
                                                          >
                                                            {son.label}
                                                            <ChevronDown
                                                              size={14}
                                                              className="ml-3"
                                                            />
                                                          </div>
                                                        ) : (
                                                          <div>{son.label}</div>
                                                        )}
                                                        {son.sons.length >
                                                          0 && (
                                                          <Collapse
                                                            isOpen={
                                                              !collapseChilds.includes(
                                                                son.value,
                                                              )
                                                            }
                                                          >
                                                            {son.sons.map(
                                                              item => (
                                                                <div
                                                                  className="d-flex"
                                                                  key={
                                                                    item.value
                                                                  }
                                                                >
                                                                  <CustomInput
                                                                    type="checkbox"
                                                                    className="custom-control-success mt-2"
                                                                    id={
                                                                      item.value
                                                                    }
                                                                    defaultChecked
                                                                    inline
                                                                  />
                                                                  <div className="mt-2">
                                                                    {item.son
                                                                      .length >
                                                                    0 ? (
                                                                      <div
                                                                        type="button"
                                                                        onClick={() =>
                                                                          handleShowMoreChilds(
                                                                            item.value,
                                                                          )
                                                                        }
                                                                      >
                                                                        {
                                                                          item.label
                                                                        }
                                                                        <ChevronDown
                                                                          size={
                                                                            14
                                                                          }
                                                                          className="ml-3"
                                                                        />
                                                                      </div>
                                                                    ) : (
                                                                      <div>
                                                                        {
                                                                          item.label
                                                                        }
                                                                      </div>
                                                                    )}
                                                                    {item.son
                                                                      .length >
                                                                      0 && (
                                                                      <Collapse
                                                                        isOpen={
                                                                          !collapseChilds.includes(
                                                                            item.value,
                                                                          )
                                                                        }
                                                                      >
                                                                        {item.son.map(
                                                                          itemchild => (
                                                                            <div
                                                                              className="d-flex"
                                                                              key={
                                                                                itemchild.value
                                                                              }
                                                                            >
                                                                              <CustomInput
                                                                                type="checkbox"
                                                                                className="custom-control-success mt-2"
                                                                                id={
                                                                                  itemchild.value
                                                                                }
                                                                                defaultChecked
                                                                                inline
                                                                              />
                                                                              <div className="mt-2">
                                                                                {
                                                                                  itemchild.label
                                                                                }
                                                                              </div>
                                                                            </div>
                                                                          ),
                                                                        )}
                                                                      </Collapse>
                                                                    )}
                                                                  </div>
                                                                </div>
                                                              ),
                                                            )}
                                                          </Collapse>
                                                        )}
                                                      </div>
                                                    </div>
                                                  ))}
                                                </Collapse>
                                              )}
                                            </>
                                          )}
                                        </div>
                                      </div>
                                    ))}
                                  </Collapse>
                                )}
                              </div>
                            </div>
                          ))}
                        </Collapse>
                      )}
                    </div>
                  </div>
                </div>
              </CardBody>
            </Card>
          </Col>
        ))}
      </Row>
    </>
  )
}
export default ProfileExploited
